# 事务需要遵循的原则：ACID
*  `Automicity`  原子性 ：事务要么被全部执行，要么全不被执行。如果事务下的子事务全部提交成功，则所有数据库操作被提交，否则应该进行事务回滚。

  **计算机中很多地方（比如编程中）都需要一些保证原子性的实现，一个需要执行完所有的操作才有意义的操作集合，就可以实现成原子性的**

* `Consistency` 一致性：事务应该确保数据库状态从一个一致状态转变为另一个一致性状态

  计算机中很多地方（比如编程（多线程）中，cpu工作机制中（多指令并行）需要保证最后的结果是这些所有操作时候的最终结果…..）
  简单的例子：现在有6个人 每人有一个账号，他们之间会相互转账，这样就组成了一个小的数据系统，那么什么事一致性呢？这是个人定义的，比如这几个人账号的总金额不变，那就是一致的，反之不一致。 再比如 现在数据时分布式存储的，有一个数据在几个地方都保存了，那么任何时候这几个地方的数据都必须相同，这也是一致性。

* `Isolation` 隔离性：并发事务相互间不能被影响

* `Durabillity` 持久性：事务一旦提交之后将他对数据库的操作应该是永久性的，即便出现其他故障，事务处理结果也应不被影响。

